{{ if .Values.committeeProtocolsJob }}
apiVersion: batch/v1
kind: Job
#apiVersion: batch/v1beta1
#kind: CronJob
metadata:
  name: app-committees-protocols
spec:
#  schedule: {{ .Values.committeeProtocolsJob.schedule | quote }}
#  concurrencyPolicy: Forbid
#  jobTemplate:
#    spec:
  template:
    metadata:
      name: app-committees-protocols
    spec:
      containers:
      - name: pipelines
        image: {{ .Values.committeeProtocolsJob.image | quote }}
        command:
        - bash
        - "-c"
        - |
          while ! [ -e /pipelines/data/synced ]; do sleep 5 && echo .; done && rm -f /pipelines/data/synced &&\
          dpp run ./committees/download_protocols &&\
          dpp run ./committees/parse_protocols &&\
          touch /pipelines/data/done
        volumeMounts: [{"name": "data", "mountPath": "/pipelines/data"}]
      - name: ops
        image: orihoch/sk8sops:pipelines-gcs@sha256:c232fcbd4ffff456b9cb9312a4b7d62cec8c0fe6b36bf31e50625a618f129746
        resources: {"requests": {"cpu": "0.01", "memory": "100Mi"}}
        env:
        - name: CLOUDSDK_CORE_PROJECT
          value: {{ .Values.pipelinesStorage.CLOUDSDK_CORE_PROJECT | quote }}
        - name: GS_BUCKET_NAME
          value: {{ .Values.pipelinesStorage.GS_BUCKET_NAME | quote }}
        - name: INITIAL_SYNC_SCRIPT
          value: gsutil -m rsync -r gs://knesset_data_pieplines/committees/ /pipelines/data/
        - name: SYNC_ARGS
          value: "-a public-read"
        volumeMounts:
        - name: data
          mountPath: /pipelines/data
        - name: k8s-ops
          mountPath: /k8s-ops
          readOnly: true
      volumes:
      # this is the k8s ops secret, see https://github.com/OriHoch/sk8s-ops/blob/master/README.md#secrets
      - name: k8s-ops
        secret:
          secretName: ops
      # empty dir is stored on host and shared between all container in pod, we use it to sync data between the pods
      - name: data
        emptyDir: {}
      restartPolicy: Never
{{ end }}