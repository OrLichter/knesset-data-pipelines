{{ if .Values.enabled }}
apiVersion: v1
kind: Service
metadata: {name: {{.Values.name | default "committees-webapp"}}}
spec:
  ports:
  - {name: '5050', port: 5050}
  selector: {app: {{.Values.name | default "committees-webapp"}}}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata: {name: {{.Values.name | default "committees-webapp"}}}
spec:
  replicas: 1
  template:
    metadata:
      labels: {app: {{.Values.name | default "committees-webapp"}}}
    spec:
      containers:
      - env:
        - name: DPP_DB_ENGINE
          valueFrom:
            secretKeyRef:
              name: {{.Values.global.secretEnvVars}}
              key: "DPP_DB_ENGINE"
        image: {{.Values.image | default "gcr.io/hasadna-oknesset/knesset-data-committees-webapp:3f10df07be6ac02929d38c008f8ce1989dd28a51"}}
        name: {{.Values.name | default "committees-webapp"}}
        ports:
        - {containerPort: 5050}
        resources:
          requests: {cpu: {{.Values.cpuRequests | default "1m"}}}
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
          httpGet:
            path: /
            port: 5050
      initContainers:
      ##### ensure pipelines app is running before starting this service ##############
      - name: pipelines-init-health-check
        image: governmentpaas/curl-ssl@sha256:1e44c135890c16a27664336e4ca4e69b7750be4b67b3e10a8b4c5acfefb793ce
        command:
        - "sh"
        - "-c"
        - >
          curl -L http://{{.Values.global.mainHostName}}/pipelines/ -m15 | grep "kns_committee: updated rows"
{{ end }}