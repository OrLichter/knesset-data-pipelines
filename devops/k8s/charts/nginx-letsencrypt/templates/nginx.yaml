{{ if .Values.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.nginxConfigMap | default "nginx-conf-d"}}
data:
  data.inc: |
{{ tpl (.Files.Get "conf.d/data.inc") . | indent 4 }}
  default.inc: |
{{ tpl (.Files.Get "conf.d/default.conf") . | indent 4 }}
  healthcheck.inc: |
{{ tpl (.Files.Get "conf.d/healthcheck.inc") . | indent 4 }}
  letsencrypt.inc: |
{{ tpl (.Files.Get "conf.d/letsencrypt.inc") . | indent 4 }}
  restricted.inc: |
{{ tpl (.Files.Get "conf.d/restricted.inc") . | indent 4 }}
  ssl.inc: |
{{ tpl (.Files.Get "conf.d/ssl.inc") . | indent 4 }}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata: {name: {{.Values.nginxName | default "nginx"}}}
spec:
  replicas: 1
  template:
    metadata:
      labels: {app: {{.Values.nginxName | default "nginx"}}}
    spec:
      nodeSelector:
        {{ .Values.global.hostPathNodeSelector }}
      containers:
      - image: {{.Values.nginxImage | default "nginx:alpine"}}
        name: {{.Values.nginxName | default "nginx"}}
        ports:
        - {containerPort: 80}
        - {containerPort: 443}
        resources:
          requests: {cpu: {{.Values.nginxCpuRequests | default "20m"}}}
        volumeMounts:
        - name: host
          mountPath: /usr/share/nginx/html
          subPath: {{ .Values.global.hostPathNginxHtmlSubPath }}
        - name: host
          mountPath: /letsencrypt-etc
          subPath: {{ .Values.global.hostPathLetsencryptEtcSubPath }}
          readOnly: true
        - name: nginx-conf-d
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: nginx-htpasswd
          mountPath: /etc/nginx/htpasswd
          readOnly: true
      volumes:
      - name: host
        hostPath:
          path: {{ .Values.global.hostPath }}
      - name: nginx-conf-d
        configMap:
          name: nginx-conf-d
      - name: nginx-htpasswd
        secret:
          secretName: nginx-htpasswd
*/ -}}
{{ end }}